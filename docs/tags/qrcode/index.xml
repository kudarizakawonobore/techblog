<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qrcode on 下り坂を昇るブログ</title>
    <link>https://kudarizakawonobore.github.io/techblog/tags/qrcode/</link>
    <description>Recent content in qrcode on 下り坂を昇るブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 20 Feb 2020 23:09:00 +0900</lastBuildDate>
    
	<atom:link href="https://kudarizakawonobore.github.io/techblog/tags/qrcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi で QR コードリーダーからプログラムを動かす</title>
      <link>https://kudarizakawonobore.github.io/techblog/blog/2020/02_qrcode/</link>
      <pubDate>Thu, 20 Feb 2020 23:09:00 +0900</pubDate>
      
      <guid>https://kudarizakawonobore.github.io/techblog/blog/2020/02_qrcode/</guid>
      <description>概要 市販のQRコードリーダーを使って、処理を行うデバイスを Raspberrypi で作るときの実装について書く。
知っておきたいこと USB タイプの QR コードリーダーや、バーコードリーダーは、キーボードと同様の入力デバイスとして扱われる。
QR コードを Read する（＝デコードする）と、市販の QRコードリーダーが テキスト文字列として PC に入力してくれる。
単に値を解読したいだけなら、テキストエディタを開いて読み込んであげるだけでよい。 自作のアプリを作って、解読した値を渡したいなら、キーボードのイベントをListenするプログラムを書いてあげればよい。
環境 Raspberry Pi 3 OS: Raspbian Python: 3.6.5
候補 Python でキーボードの入力を取得するためのライブラリはいくつかあるが、今回は keyboard を採用した。
下記は、キーボードの入力を取得するためのライブラリ。
pynput(不採用) キーボードやマウスの入力を Listen できるライブラリ。 keyboard 同様、文字列として入力を受け付けられるが、バックグラウンドで実行させることができなさそうなので、不採用。
envdev(不採用) pynput と異なり、バックグラウンドで実行させられる他、デバイスを指定することができる。 一方で、発生したイベントがコード文字列(KEY_A や KEY_B など）になってしまうためコードを文字列に戻してやる処理が必要になる。
keybard(採用) バックグラウンドで実行でき、文字列をそのまま入力できるので、採用。
インストール pip で keyboard をインストールする
pip install keybard実装 import keyboardimport timeqr = &amp;#34;&amp;#34;def key_press(key):global qrif key.name !</description>
    </item>
    
  </channel>
</rss>