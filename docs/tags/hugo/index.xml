<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on 下り坂を昇るブログ</title>
    <link>https://kudarizakawonobore.github.io/techblog/tags/hugo/</link>
    <description>Recent content in hugo on 下り坂を昇るブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 20 Jan 2020 23:30:27 +0900</lastBuildDate>
    
	<atom:link href="https://kudarizakawonobore.github.io/techblog/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>はてなブログを卒業して GitHubPages × Hugo にしてみた</title>
      <link>https://kudarizakawonobore.github.io/techblog/blog/2020/00-hugo/</link>
      <pubDate>Mon, 20 Jan 2020 23:30:27 +0900</pubDate>
      
      <guid>https://kudarizakawonobore.github.io/techblog/blog/2020/00-hugo/</guid>
      <description>動機 いままで個人ブログの作成を はてなブログでやっていたが、下記のような課題を感じていた
エディタ・コピペ問題 普段、あらゆるエディタのキーバインドを Vim 仕様にしているせいで、ブログの記述も Vim キーバインドでやりたい。
はてなブログの サイト上のエディタ では 私の知る限り、 Vim キーバインドで記述するのは難しい。 そのため、ローカルで Markdown 形式でファイルを作成し、コピペする方式になるのだが、 そうすると下記のような問題にぶち当たる。
キャプチャ管理問題 キャプチャを貼り付けるときは、ブログが管理しているディレクトリのリンクを記述することになる。 ローカルで確認しにくいうえ、アップロードのたびにサイトに行ったり、「ここにキャプチャ」的な記述を残したりするのが面倒。
Preview 煩わしい問題 記事を書き終わった後、ローカルで記述した記事を公開用に調整（主に見た目）するときに、何度も Preview → 書き直し を繰り返すことになる。 これが、ページ遷移が何度も発生するため、かなり煩わしいことに加え、上記の問題と相まって、サイト → ローカル へのコピペも必要になったりして、デグレが発生する確率も上がる。
ローカルでサクサクと、公開用の見た目を調整して、ワンコマンドで公開、なんてことを目指したいところ。
実際、はてなブログ用のCSS やらをローカルに落としてきて、疑似的に開発環境を構築することもできるのだろうが、最近は静的サイトジェネレータと、GitHubPages を使えば、簡単に上記課題を解決できるので思い切って移行してみることにした。
Hugo 静的サイトジェネレータを複数試して比較してみた結果、Hexo と Hugo が候補に残った。
Hexo は Node ベースの静的サイトジェネレータで、Hugo と引けを取らない機能の充実ぶりと、GithubPages に公開するまでの手順が非常に簡単なのが魅力だったが、LiveReload の速さが決め手で、Hugo を選択することにした。
Hugo とは、静的サイトジェネレータの1種で、 Go によって動く。
インストール方法 前提 下記はインストール済みである前提
 Go Git  インストール手順（簡単） 下記リンクから、exe をダウンロードして、Pathを通すだけでOK
https://github.com/gohugoio/hugo/releases
公式サイトには、　Chocolatey を使ってインストールする方法が記述されているので、 お好きな方で。
各種 コマンド サイトを作成 hugo new site &amp;lt;サイトを管理するディレクトリ名&amp;gt;上記コマンドを実行すると、ディレクトリに必要なファイルが生成される。</description>
    </item>
    
  </channel>
</rss>