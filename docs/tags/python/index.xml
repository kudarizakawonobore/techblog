<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 下り坂を昇るブログ</title>
    <link>https://kudarizakawonobore.github.io/techblog/tags/python/</link>
    <description>Recent content in python on 下り坂を昇るブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 20 Feb 2020 23:09:00 +0900</lastBuildDate>
    
	<atom:link href="https://kudarizakawonobore.github.io/techblog/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi で QR コードリーダーからプログラムを動かす</title>
      <link>https://kudarizakawonobore.github.io/techblog/blog/2020/02_qrcode/</link>
      <pubDate>Thu, 20 Feb 2020 23:09:00 +0900</pubDate>
      
      <guid>https://kudarizakawonobore.github.io/techblog/blog/2020/02_qrcode/</guid>
      <description>概要 市販のQRコードリーダーを起動契機にして、何かしらの処理を行うデバイスを作りたいときの実装メモ。
環境 Raspberry Pi 3 OS: Raspbian Python: 3.</description>
    </item>
    
    <item>
      <title>iPhone のカメラで撮影した画像を直接PC に取り込む</title>
      <link>https://kudarizakawonobore.github.io/techblog/blog/2020/01-capture/</link>
      <pubDate>Sun, 16 Feb 2020 20:58:40 +0900</pubDate>
      
      <guid>https://kudarizakawonobore.github.io/techblog/blog/2020/01-capture/</guid>
      <description>動機 Jupyter/OpenCV などで画像処理のロジックを書いていると、主に閾値調整やフィルタリング処理が、テスト用に使っている画像に局所最適化されてしまうことがままある。
ある程度ロジックを書いた後、複数の写真を撮ってテストできれば、調整もたやすく、コードの汎用性も上がるはず。
一方で、iPhone の画像は、何枚か撮影して、メールや iCloud, Google Photo などを使えばインターネット越しで共有できるが、そうすると、ファイル名がわかりづらかったり、Zip を解凍したりと、いくつか面倒な作業が発生する。</description>
    </item>
    
  </channel>
</rss>